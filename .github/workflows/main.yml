name: Create PDF ebook
on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 1
          
      - name: Copy assets
        run: |
          cp -v ./hacker-laws/README.md README.md
          cp -av ./hacker-laws/images ./images
          
      - name: Create MD for ebook
        run: sh -x ebook.sh
          
      - name: Create PDF
        uses: docker://pandoc/latex:latest
        with:
          args: >- # allows you to break string into multiple lines
            -V
            toc-title:"Table
            Of
            Contents"
            --toc
            --pdf-engine=pdflatex
            -s
            -o
            hacker-laws.pdf
            hacker-laws.md
          
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: hacker-laws PDF ebook
          path: hacker-laws.pdf
          
      - name: Delete latest before release
        uses: ame-yu/action-delete-latest-release@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Create Release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: latest
          release_name: Latest Release
          draft: false
          prerelease: false
          
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ./hacker-laws.pdf
          asset_name: hacker-laws.pdf
          asset_content_type: application/pdf